name: TEST_RELEASE_AND_DEPLOY

on: [push, pull_request]

# Using GitHub CLI in workflows
# You can script with GitHub CLI in GitHub Actions workflows
# https://docs.github.com/en/actions/using-workflows/using-github-cli-in-workflows

# About GitHub CLI
# https://docs.github.com/en/github-cli/github-cli/about-github-cli
# GitHub CLI 2.31.0 windows amd64
# https://github.com/cli/cli/releases/tag/v2.31.0
# "C:\Users\AnonymousUser\Downloads\gh_2.31.0_windows_amd64\bin\gh" --help

# How to get the workflow run ID? #26965
# By ID, I mean the 12345 in https://github.com/foo/bar/actions/12345.
# Do you mean the run id in https://github.com/foo/bar/actions/ runs /12345.
# RUNID=$(gh api repos/$OWNER/$REPO/commits/$COMMIT_SHA/check-runs | jq -r '.check_runs[] | select(.name == "NAME_OF_YOUR_GITHUB_ACTIONS_WORKFLOW") | .html_url | capture("/runs/(?<number>[0-9]+)/jobs") | .number' | sed 's/"//g' | head -n 1)
# https://github.com/orgs/community/discussions/26965

# Workflow basics
# A workflow must contain the following basic components:
# One or more jobs, each of which will execute on a runner machine and run a series of one or more steps.
#
# In the .github/workflows/ directory, 
# create a new file called learn-github-actions.yml and add the following code.
# YAML
# name: learn-github-actions
# run-name: ${{ github.actor }} is learning GitHub Actions
# on: [push]

# https://docs.github.com/en/actions/using-workflows/about-workflows

# USAGE
# gh run download [<run-id>] [flags]
# EXAMPLES
# Download all artifacts generated by a workflow run
# gh run download <run-id>
  

# per repository
# secrets.ACTIONS_CREATE_RELEASE_REPO_SECRET
# https://github.com/AndreMikulec/testapp/settings/secrets/actions
# FROM
# per user
# Your Profile -> Settings -> Developer Settings -> Personal Access Tokens -> Tokens(classic)
# https://docs.github.com/en/enterprise-server@3.4/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens

# help from
# https://github.com/AndreMikulec/testapp/blob/f13d725a9fcfa5daff3d25ff00f9899b417cbc5d/.github/workflows/build_everything.yml

jobs:
  build_and_deploy:
    runs-on: windows-latest
    
    steps:
    
    - name: Build and Create Assets
      shell: cmd
      run: |
        mkdir %GITHUB_WORKSPACE%\assets
        pushd %GITHUB_WORKSPACE%\assets
        echo Asset1 > asset1.txt
        echo Asset2 > asset2.txt
        popd
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: assets
        path: |
          assets/
    
    - name: Release Assets 
      # if: github.ref_type == 'tag'
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        replacesArtifacts: true
        commit: ${{ env.USER_SHA }}
        tag: ${{ env.USER_GITHUB_REF_NAME }}
        artifacts: "assets/*.*"
        token: ${{ secrets.GITHUBACTIONSTEST_ACTIONS_CREATE_RELEASE_REPO_SECRET }}
      env:
        USER_GITHUB_SHA: ${{ github.sha }}
        USER_GITHUB_REF_NAME: ${{ github.ref_name }}

    - name: Dowwnload Releases to Assets Folder
      shell: cmd
      run: |
        pushd %GITHUB_WORKSPACE%\assets
        set OWNER=${{ github.repository_owner }}
        echo %OWNER%
        set REPO=${{ github.event.repository.name }} 
        echo %REPO%
        set OWNER_REPO=${{ github.repository }}
        echo OWNER_REPO %OWNER_REPO%
        set COMMIT_SHA=${{ github.sha }}
        echo COMMIT_SHA %COMMIT_SHA%
        set RUNID=${{ github.run_id }}
        echo RUNID_1 %RUNID%
        gh run download %RUNID%
        popd
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBACTIONSTEST_ACTIONS_CREATE_RELEASE_REPO_SECRET }}
        
    - name: Choco Install WinSCP
      uses: crazy-max/ghaction-chocolatey@v2
      with:
        args: install -y winscp

    - name: Send Assets to Sourceforge
      # if: github.ref_type == 'tag'
      shell: cmd
      run: |
        echo open sftp://andremikulec,andremikulec.u:${{ secrets.GITHUBACTIONSTEST_FTP_PSW_SECRET }}@frs.sourceforge.net/ -hostkey="*" > ftp.txt 2>&1 || date /t
        echo put assets/asset1.txt /home/frs/project/andremikulec/ >> ftp.txt
        echo put assets/asset2.txt /home/frs/project/andremikulec/ >> ftp.txt
        echo exit >> ftp.txt
        set PATH=C:\Program Files (x86)\WinSCP;%PATH%
        winscp.com /script=ftp.txt || date /t
