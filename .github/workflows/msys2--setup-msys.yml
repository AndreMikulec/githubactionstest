name: CI

on: [push, pull_request]

# THIS IS BASED OFF OF
# https://github.com/grimme-lab/blas-interface/blob/f31a8b67fcd36771ee3ee04f63b7ff38e81e17f9/.github/workflows/build.yml

jobs:
  build: 
    name: ${{ matrix.MSYSTEM }} ${{ matrix.shell }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:

        - os: windows-latest
          MSYSTEM: UCRT
          shell: msys2 {0}

        - os: windows-latest
          MSYSTEM: MINGW32
          shell: msys2 {0}

        - os: windows-latest
          shell: powershell
          MSYSTEM: ''
          OSYSTEM: CLANG32

    defaults:
      run:
        shell: ${{ matrix.shell }}

    steps:
    - name: MSYS2
      # continue-on-error: true
      uses: msys2/setup-msys2@v2
      with:
        msystem: MSYS
        update: false

    - name: Set Variables
      continue-on-error: true
      shell: powershell
      run: |
        function Set-EnvVar {param($X)     Add-Content -Path ${env:GITHUB_ENV} -Value "$X"}
        ${env:do} = "true"

    - name: DO powershell version
      continue-on-error: true
      shell: powershell
      run: |
        echo "matrix shell: ${{ matrix.shell }}"
        Get-CIMInstance -Class Win32_Processor | Select-Object -Property Name
        ${env:MSYSTEM} = "UCRT64"
        msys2 -c 'set -x -v -e;uname -a;export | grep MINGW;export | grep MSYSTEM' 

    - name: DO cmd verson
      continue-on-error: true
      shell: cmd
      run: |
        echo "matrix shell: ${{ matrix.shell }}"
        systeminfo | findstr /B "/C:OS Name" /B "/C:OS Version"
        set MSYSTEM=MINGW32
        msys2 -c 'set -x -v -e;uname -a' # CAN NOT DO PIPING

    - name: DO msys2 {0} version 
      continue-on-error: true
      shell: msys2 {0}
      run: |
        set -x -v -e
        echo "matrix shell: ${{ matrix.shell }}"
        uname -a
        echo "MSYSTEM ${MSYSTEM}"
        # CAN NOT DO PIPING

    - name: DO msys2 {0} version MINGW64
      continue-on-error: true
      shell: msys2 {0}
      env:
        MSYSTEM: MINGW64
      run: |
        set -x -v -e
        echo "matrix shell: ${{ matrix.shell }}"
        uname -a
        echo "MSYSTEM ${MSYSTEM}"
        export | grep MINGW
        export | grep MSYSTEM

    - name: DO msys2 {0} verson ''
      continue-on-error: true
      shell: msys2 {0}
      env:
        MSYSTEM: '' 
      run: |
        set -x -v -e
        echo "matrix shell: ${{ matrix.shell }}"
        uname -a
        echo "MSYSTEM ${MSYSTEM}"
        # CAN NOT DO PIPING

    - name: DO msys2 {0} verson OSYSTEM
      continue-on-error: true
      shell: msys2 {0}
      env:
        MSYSTEM: ${{ matrix.OSYSTEM }}
      run: |
        set -x -v -e
        echo "matrix shell: ${{ matrix.shell }}"
        uname -a
        echo "MSYSTEM ${MSYSTEM}"
        export | grep MINGW
        export | grep MSYSTEM
        # ??? PIPING ???


