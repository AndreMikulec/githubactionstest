name: CI

on: [push, pull_request, workflow_dispatch]


jobs:
  build: 
    name: ${{ matrix.shell }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:

        - os: windows-latest
          shell: powershell

    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Detect and Delete a Windows Service
      shell: powershell
      run: |
        ${env:InstalledPostgreSQL} = Get-Service | Where-Object {$_.Name -Match  "postgresql"}
        echo "InstalledPostgreSQL: ${env:InstalledPostgreSQL}"
        # For PowerShell versions prior to v6, you can do this
        # https://stackoverflow.com/questions/4967496/check-if-a-windows-service-exists-and-delete-in-powershell
        if("${env:InstalledPostgreSQL}" -ne ""){
          "Unistalling Windows Service = ${env:InstalledPostgreSQL}"
          Stop-Service "${env:InstalledPostgreSQL}"
          Get-CimInstance -ClassName Win32_Service -Filter "Name='${env:InstallPostgreSQL}'" | Remove-CimInstance
          # Powershell 6 and greater
          # Remove-Service -Name "${env:InstalledPostgreSQL}"
          "Done."
        }
        ${env:InstalledPostgreSQL} = Get-Service | Where-Object {$_.Name -Match  "postgresql"}
        echo "InstalledPostgreSQL: ${env:InstalledPostgreSQL}"
        if("${env:InstalledPostgreSQL}" -ne ""){
          Write-Error "Failed to uninstall the Windows Service = ${env:InstalledPostgreSQL}" -ErrorAction Stop
        }
