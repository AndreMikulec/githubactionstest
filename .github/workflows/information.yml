
name: Information
# env:
#   # Enabling runner diagnostic logging
#   ACTIONS_RUNNER_DEBUG: true
#   # Enabling step debug logging
#   ACTIONS_STEP_DEBUG: true


on: [push, pull_request]

jobs:

  information_ubuntu_latest:
    name: Ubuntu Knowledge About everything
    runs-on: ubuntu-latest

    steps:

      - name: Ubuntu Debugging Force
        shell: bash
        run:
          set -x -v -e;
          pwd;
          echo Hello > Hello.txt
          ls -alrt;
          cat Hello.txt;
          export;
          cd /;
          pwd;
          ls -alrt;

      - name: Ubuntu Dump github context global data
        shell: bash
        run: |
          set -x -v -e
          pwd
          ls -alrt
          echo "$GITHUB_CONTEXT" 
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Ubuntu Dump runner context global data
        shell: bash
        run: echo "$RUNNER_CONTEXT"
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}

      - name: Ubuntu Dump secrets
        shell: bash
        run: |
          echo "$SECRETS"
        env:
          SECRETS: ${{ toJSON(secrets) }}

      - name: Ubuntu Dump .Env vars
        shell: bash
        run: |
          echo "$VARS"
        env:
          VARS: ${{ toJSON(vars) }}


  debug_powershell:
    name: Debugging Powershell
    runs-on: windows-latest
    steps:
      - name: Windows Poweshell echo test
        run: |
          Start-Transcript -Path ran.txt -IncludeInvocationHeader
          Set-PSDebug -Trace 2

          dir
          pwd
          dir
          pwd
          dir
          echo "$(pwd)"
          echo "$(dir)"
          cd "C:\"
          pwd
          dir
          echo "$(pwd)"
          echo "$(dir)"

          Get-Content -Path ran.txt
          Stop-Transcript
          Set-PSDebug -Trace 0

  information_windows_latest:
    name: Windows Knowledge About everything
    runs-on: windows-latest

    steps:
      - name: Windows Dump github env global data
        shell: cmd
        run: |
          echo on
          echo %CD%
          cd "C:\"
          echo %CD%

      - name: Windows Dump github context global data
        shell: cmd
        run: |
          echo on
          echo %CD%
          echo %GITHUB_CONTEXT%
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Windows Dump runner context global data
        shell: cmd
        run: echo %RUNNER_CONTEXT%
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}

      - name: Windows Dump secrets
        shell: cmd
        run: echo %SECRETS%
        env:
          SECRETS: ${{ toJSON(secrets) }}

      - name: Windows Dump env. vars
        shell: cmd
        run: echo %VARS%
        env:
          VARS: ${{ toJSON(vars) }}


  information_macos_latest:
    name: MacOS Knowledge About everything
    runs-on: macos-latest

    steps:
      - name: MacOS Dump github env global data
        shell: bash
        run: |
          set -x -v -e
          pwd
          export
          cd /
          pwd

      - name: MacOS Dump github context global data
        shell: bash
        run: |
          set -x -v -e
          pwd
          echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: MacOS Dump runner context global data
        shell: bash
        run: |
          echo "$RUNNER_CONTEXT"
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}

      - name: MacOS Dump secrets
        shell: bash
        run: |
          echo "$SECRETS"

        env:
          SECRETS: ${{ toJSON(secrets) }}

      - name: MacOS Dump .Env vars
        shell: bash
        run: |
          echo "$VARS"
        env:
          VARS: ${{ toJSON(vars) }}
