name: test MATRIX.FAKE env.FAKE
run-name: Testing FAKE.matrix
on: [push]

jobs:
  testing_FAKE_matrix:
    name: NAME_${{ matrix.FAKE }}_${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      # Disable fail-fast as we want results from all even if one fails.
      fail-fast: false
      matrix:
        include:
          - real1: real1value
            os: windows-latest
    steps:
      - name: matrix.FAKE is nothing
        if: ${{ matrix.FAKE == '' }}
        run: |
          echo "MATRIX.FAKE ${{ matrix.FAKE }}"
      - name: matrix.FAKE is something
        if: ${{ matrix.FAKE != '' }}
        run: |
          echo "MATRIX.FAKE ${{ matrix.FAKE }}"

  testing_FAKE_env:
  # name: ${{ env.FAKE }}_${{ matrix.os }} - unrecognized named-value: 'env'
    name: _${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      # Disable fail-fast as we want results from all even if one fails.
      fail-fast: false
      matrix:
        include:
          - real1: real1value
            os: windows-latest
    steps:
      - name: env.FAKE is nothing
        if: ${{ env.FAKE == '' }}"
        run: |
          echo "env.FAKE ${{ env.FAKE }}"
      - name: env.FAKE is nothing - == STRING
        if: env.FAKE == ''
        run: |
          echo "env.FAKE ${{ env.FAKE }}" 
      - name: env.FAKE is nothing - != STRING
        if: env.FAKE != ''
        run: |
          echo "env.FAKE ${{ env.FAKE }}" 
      - name: env.FAKE is something (WILL RUN ANYWAYS - BAD COMPARISON "!=")
        # ${{ }} expression syntax turns the contents into a string, and strings are truthy. 
        # https://docs.github.com/en/actions/learn-github-actions/expressions
        if: ${{ env.FAKE != '' }}"
        run: |
          echo "env.FAKE ${{ env.FAKE }}" # PROPER PLACE TO TEST
          # PROPER WAY TO TEST
          if( "${{ env.FAKE }}" -eq "" ) { echo "env.FAKE is nothing" }
          #  Change from "nothing" to "something"
          if( "${{ env.FAKE }}" -eq "" ) { ${env:FAKE} = "something" }
          function Set-EnvVar {param($X)   Add-Content -Path ${env:GITHUB_ENV} -Value "$X"}
          Set-EnvVar "FAKE=${env:FAKE}"
      # PROPER WAY TO TEST env. IS SOMETHING/NOTHING
      - name: env.FAKE is something  COMPARISON 
        if: ${{ env.FAKE == 'something' }}"
        run: |
          echo "env.FAKE is ${{ env.FAKE }}"

